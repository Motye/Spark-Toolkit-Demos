<project name="ABLWebApp" basedir="." default="usage">

    <property file="build.properties"/>

    <target name="usage" description="Usage Instructions">
        <init_env/>

        <echo message="${line.separator}Usage Instructions:"/>
        <echo message="${line.separator}ant annotate - Create a consolidated annotation file"/>
        <echo message="${line.separator}ant publish - Push code to PAS instance, trim sessions"/>
        <echo message="    PAS Instance: ${pas.path}"/>
        <echo message="     WebApp Name: ${webapp}"/>
        <echo message="${line.separator}ant build - Create deployment artifacts"/>
        <echo message="    -DjavaHome=[JAVA_HOME] = Location of Java install (Default: ${javaHome})"/>
        <echo message="    -Dwebapp=[WEBAPP_NAME] = Name of the WebApp, also for WAR/ZIP filename (Default: ${webapp})"/>
        <echo message="${line.separator}Local Paths:"/>
        <echo message="${line.separator}"/>
        <echo message="Source: ${src.dir}"/>
        <echo message="Config: ${deploy.dir}"/>
    </target>

    <macrodef name="init_env">
        <sequential>
            <property environment="env"/>

            <!-- Set a property if environment is Windows. -->
            <condition property="isWin32">
                <os family="windows"/>
            </condition>

            <!-- Set a property if environment is Unix. -->
            <condition property="isUnix">
                <os family="unix"/>
            </condition>

            <!-- Set a property if environment is 32bit. -->
            <condition property="is32bit">
                <or>
                    <os arch="x86"/>
                    <os arch="i386"/>
                </or>
            </condition>

            <!-- Set a property if environment is 64bit. -->
            <condition property="is64bit">
                <not>
                    <or>
                        <os arch="x86"/>
                        <os arch="i386"/>
                    </or>
                </not>
            </condition>

            <condition property="path" value="/usr/pas" else="C:/PASOE">
                <os family="unix"/>
            </condition>

            <!-- Set properties for special directories. -->
        	<property name="javaHome" value="${dlcHome}/java"/>
            <property name="src.dir" value="${basedir}"/>
            <property name="deploy.dir" value="${basedir}/Deploy"/>
            <property name="instance" value="oepas1"/>
        	<property name="pas.root" value="${path}"/>
            <property name="pas.path" value="${pas.root}/${instance}"/>
            <property name="webapp" value="sports"/>

        	<mkdir dir="${deploy.dir}"/>
        </sequential>
    </macrodef>

    <macrodef name="init_oe">
        <sequential>
            <init_env/>

            <fail message="Environment is not 64-bit">
                <condition>
                    <not>
                        <isset property="is64bit"/>
                    </not>
                </condition>
            </fail>

            <!-- Check if DLC is set as an environment variable. -->
            <fail message="DLC Home path is not set">
                <condition>
                    <and>
                        <not><isset property="dlcHome"/></not>
                        <not><isset property="env.DLC"/></not>
                    </and>
                </condition>
            </fail>
            <property name="dlcHome" value="${env.DLC}"/>
            <property name="dlcJava" value="${dlcHome}/java"/>

            <!-- Load the current PCT library from DLC. -->
            <taskdef resource="PCT.properties" classpath="${dlcHome}/pct/PCT.jar"/>

            <!-- Access the OE version info, and read into a property. -->
            <ProgressVersion dlcHome="${dlcHome}" majorVersion="oeMajor" minorVersion="oeMinor" revision="oeRev" fullVersion="full"/>
            <property name="oe.version" value="${oeMajor}.${oeMinor}.${oeRev}"/>
            <echo message="OpenEdge Version: ${oe.version}"/>

            <!-- Add the ANT-Contrib library to this environment (present in 11.7.4+ and 12.0+). -->
            <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${dlcHome}/ant/lib/ant-contrib-0.6.jar"/>

            <taskdef resource="com/progress/openedge/pdt/ant/ablwebapp/ablwebapps.properties">
                <classpath>
                    <pathelement location="${dlcJava}/ant-ablwebapp.jar" />

                    <pathelement location="${dlcJava}/ant-libs/ablwebapp.jar" />
                    <pathelement location="${dlcJava}/ant-libs/ablwebapp-dependencies.jar" />

                    <!-- CodeModel Dependencies -->
                    <pathelement location="${dlcJava}/ant-libs/codemodel-dependencies.jar" />

                    <!-- AST and its Dependencies -->
                    <pathelement location="${dlcJava}/ant-libs/ast.jar" />
                    <pathelement location="${dlcJava}/ant-libs/ast-dependencies.jar" />

                    <!-- Additional deps -->
                    <pathelement location="${dlcJava}/ant-libs/velocity-1.7.jar" />
                    <pathelement location="${dlcJava}/ant-libs/velocity-1.7-dep.jar" />
                    <pathelement location="${dlcJava}/ant-libs/1padapters-restExpose.jar" />
                    <pathelement location="${dlcJava}/1padapters-idl.jar" />
                    <pathelement location="${dlcJava}/ext/jettison-1.2.jar" />
                	<pathelement location="${dlcJava}/ext/jettison-1.4.0.jar" />
                    <pathelement location="${dlcJava}/ext/commons-logging-1.2.jar" />
                    <pathelement location="${dlcJava}/ext/xmlschema-core-2.2.1.jar" />
                </classpath>
            </taskdef>
        </sequential>
    </macrodef>

    <macrodef name="require">
        <attribute name="file"/>
        <attribute name="message" default="File @{file} not set or missing"/>

        <sequential>
            <fail message="@{message}">
                <condition>
                    <not>
                        <available file="@{file}" type="file"/>
                    </not>
                </condition>
            </fail>
        </sequential>
    </macrodef>

    <macrodef name="requireDir">
        <attribute name="folder"/>
        <attribute name="message" default="Directory @{folder} not set or missing"/>

        <sequential>
            <fail message="@{message}">
                <condition>
                    <not>
                        <available file="@{folder}" type="dir"/>
                    </not>
                </condition>
            </fail>
        </sequential>
    </macrodef>

    <target name="annotate">
    	<init_oe/>

        <!-- This will need to compile the code to obtain XREF files, so we need the databases as would be required by the code. -->
        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="createAnnotations.p">
            <propath>
                <pathelement path="${basedir}/tools"/>
                <pathelement path="${basedir}/PASOEContent/WEB-INF/openedge"/>
                <pathelement path="${basedir}/AppServer/Spark.pl"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <DBConnection dbName="webstate" hostName="localhost" dbPort="8500" readOnly="true"/>
            <DBConnection dbName="sports2020" hostName="localhost" dbPort="8600" readOnly="true"/>
        </PCTRun>

        <echo message="See output in ${basedir}/Deploy/Conf/annotations.json"/>
    </target>

    <target name="build">
        <init_oe/>

    	<!-- Build PL file with source and R-code. -->
        <PCTLibrary destfile="${deploy.dir}/${ablapp}.pl" dlcHome="${dlcHome}">
            <fileset dir="${basedir}/PASOEContent/WEB-INF/openedge">
                <include name="**/*.r"/>
            </fileset>
        </PCTLibrary>

        <ABLWebAppPackage srcdir="${src.dir}" destdir="${deploy.dir}" dlc="${dlcHome}" verbose="true"
                          isIncremental="false" webAppName="${webapp}"/>
    </target>

    <target name="publish">
    	<init_oe/>

        <!-- Check if PAS properties file exists. -->
        <require file="${pas.path}/conf/openedge.properties"/>

        <!-- Copy source and r-code to the PAS instance. -->
    	<copy toDir="${pas.path}/webapps/${webapp}/WEB-INF/openedge" verbose="true">
            <fileset dir="${basedir}/PASOEContent/WEB-INF/openedge">
                <include name="**/*.i"/>
                <include name="**/*.cls"/>
                <include name="**/*.p"/>
				<include name="**/*.r"/>
            </fileset>
        </copy>

        <!-- Copy annotation file to config directory. -->
        <copy toDir="${pas.path}/conf/${pas.conf.spark}" verbose="true">
            <fileset dir="${deploy.dir}/Conf">
                <include name="annotations.json"/>
            </fileset>
        </copy>

        <!-- Trim the current agents to force changes to r-code to be picked up, and get metadata via new session startups. -->
        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="refreshAgents">
            <propath>
                <pathelement path="${basedir}/tools"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <Parameter name="Scheme" value="${scheme}"/>
            <Parameter name="Host" value="${host}"/>
            <Parameter name="Port" value="${port}"/>
            <Parameter name="UserID" value="${userid}"/>
            <Parameter name="PassWD" value="${passwd}"/>
            <Parameter name="ABLApp" value="${ablapp}"/>
        </PCTRun>
    </target>

</project>